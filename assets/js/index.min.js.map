{"version":3,"sources":["form.js"],"names":["document","addEventListener","form","querySelector","inputs","querySelectorAll","valMessages","valIcons","event","preventDefault","isFormValid","i","length","value","type","emailRegex","match","textContent","classList","remove","add","forEach","m","contains","validateForm","alert","target","reset"],"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,KAC1C,MAAMC,EAAOF,SAASG,cAAc,SAC9BC,EAASJ,SAASK,iBAAiB,gBACnCC,EAAcN,SAASK,iBAAiB,yBACxCE,EAAWP,SAASK,iBAAiB,oBAE3CH,EAAKD,iBAAiB,UAEtB,SAAkBO,GACdA,EAAMC,iBAQV,WACI,IAAIC,GAAc,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOQ,OAAQD,IAC/B,GAAKP,EAAOO,GAAGE,MAUX,GAAuB,UAAnBT,EAAOO,GAAGG,KAAkB,CAC5B,MAAMC,EAAa,wJACHX,EAAOO,GAAGE,MAAMG,MAAMD,IAGlCT,EAAYK,GAAGM,YAAc,GAC7BV,EAASI,GAAGO,UAAUC,OAAO,UAC7Bb,EAAYK,GAAGO,UAAUC,OAAO,UAChCf,EAAOO,GAAGO,UAAUC,OAAO,aAG3Bb,EAAYK,GAAGM,YAAc,kCAC7BV,EAASI,GAAGO,UAAUE,IAAI,UAC1Bd,EAAYK,GAAGO,UAAUE,IAAI,UAC7BhB,EAAOO,GAAGO,UAAUE,IAAI,iBAI5Bb,EAASI,GAAGO,UAAUC,OAAO,UAC7Bb,EAAYK,GAAGO,UAAUC,OAAO,UAChCf,EAAOO,GAAGO,UAAUC,OAAO,eA7BR,UAAnBf,EAAOO,GAAGG,OACVR,EAAYK,GAAGM,YAAc,yBAGjCV,EAASI,GAAGO,UAAUE,IAAI,UAC1Bd,EAAYK,GAAGO,UAAUE,IAAI,UAC7BhB,EAAOO,GAAGO,UAAUE,IAAI,WAkChC,OANAd,EAAYe,SAAQC,IACZA,EAAEJ,UAAUK,SAAS,YACrBb,GAAc,MAIfA,EAnDHc,KACAC,MAAM,gCACNjB,EAAMkB,OAAOC","file":"index.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const form = document.querySelector('.form');\r\n    const inputs = document.querySelectorAll('.form__input');\r\n    const valMessages = document.querySelectorAll('.form__validation-msg')\r\n    const valIcons = document.querySelectorAll('.form__error-img')\r\n\r\n    form.addEventListener('submit', onSubmit);\r\n\r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        if (validateForm()) {\r\n            alert('Your form has been submited!');\r\n            event.target.reset();\r\n        }\r\n    }\r\n    \r\n    function validateForm() {\r\n        let isFormValid = true;\r\n\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            if (!inputs[i].value) {\r\n                if (inputs[i].type === 'email') {\r\n                    valMessages[i].textContent = 'Email cannot be empty';\r\n                }\r\n\r\n                valIcons[i].classList.add('active');\r\n                valMessages[i].classList.add('active');\r\n                inputs[i].classList.add('invalid');\r\n            }\r\n            else {\r\n                if (inputs[i].type === 'email') {\r\n                    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    const isValid = inputs[i].value.match(emailRegex);\r\n\r\n                    if (isValid) {\r\n                        valMessages[i].textContent = '';\r\n                        valIcons[i].classList.remove('active');\r\n                        valMessages[i].classList.remove('active');\r\n                        inputs[i].classList.remove('invalid');\r\n                    }\r\n                    else {\r\n                        valMessages[i].textContent = 'Looks like this is not an email';\r\n                        valIcons[i].classList.add('active');\r\n                        valMessages[i].classList.add('active');\r\n                        inputs[i].classList.add('invalid');\r\n                    }\r\n                }\r\n                else {\r\n                    valIcons[i].classList.remove('active');\r\n                    valMessages[i].classList.remove('active');\r\n                    inputs[i].classList.remove('invalid');\r\n                }\r\n            }\r\n        }\r\n\r\n        valMessages.forEach(m => {\r\n            if (m.classList.contains('active')) {\r\n                isFormValid = false;\r\n            }\r\n        });\r\n\r\n        return isFormValid;\r\n    }\r\n});"]}